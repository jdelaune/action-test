name: QA

on: 
  push:
    branches:
      - main
      - 'feature/**'
    # tags:
    # OR branches-ignore:
    # OR tags-ignore:
  pull_request:
    branches:
      - main
      - 'feature/**'
  release:
    types:
      - created

env:
  APP_ENV: test

defaults:
  runs-on: ubuntu-20.04
  run:
    shell: bash

jobs:
  build:
    name: Build

    container:
      image: chargifi/php-xdebug:1.5.0
      ports:
        - 80
      volumes:
        - my_docker_volume:/volume_mount
      # options: --cpus 1

    services:
      nginx:
        image: nginx
        # Map port 8080 on the Docker host to port 80 on the nginx container
        ports:
          - 8080:80
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2

      - name: Run
        run: php example.php

#       - name: Cache node modules
#         uses: actions/cache@v2
#         env:
#           CACHE_NAME: cache-node-modules
#         with:
#           # npm cache files are stored in `~/.npm` on Linux/macOS
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-

#       - name: Install Dependencies
#         run: npm install

#       - name: Build
#         run: npm build

#       - name: Test
#         run: npm test
#         env:
#           REDIS_HOST: localhost
#           REDIS_PORT: ${{ job.services.redis.ports[6379] }}

#       - name: My first step
#         uses: docker://alpine:3.8
#         run: |
#           npm ci
#           npm run build
#         working-directory: ./temp

#   my_second_job:
#     name: My second job
#     needs: [my_first_job]
